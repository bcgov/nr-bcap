# /etc/nginx/conf.d/dev.conf
# Full, self-contained server config for dev

# Upstreams avoid DNS/resolver hassles inside Docker
upstream django_app {
    server bcap:80;     # Django dev server in the app container
    keepalive 32;
}
upstream vite_dev {
    server bcap:5175;   # Vite dev server in the app container
    keepalive 32;
}

# Enable proper websocket upgrades
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 80;
    server_name _;

    # --- Logs (optional but handy while debugging) ---
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log warn;

    # --- General proxy hardening / sanity ---
    proxy_redirect          off;
    proxy_http_version      1.1;
    proxy_buffering         off;
    proxy_read_timeout      1h;
    proxy_send_timeout      1h;
    client_max_body_size    50m;



# 1) Everything under /bcap/@vite/ (modules, the client, etc.) → strip prefix
location ^~ /bcap/@vite/ {
    proxy_http_version 1.1;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        $connection_upgrade;
    proxy_set_header Host              localhost;
    proxy_set_header Origin            http://localhost:82;
    proxy_set_header Accept-Encoding   "";  # avoid gzip on dev assets

    add_header X-BCAP-Proxy "vite-scope" always;
    add_header Cache-Control "no-store";
    expires -1;

    # NOTE: no trailing slash here — this preserves the full path
    proxy_pass http://vite_dev;

    # (optional but nice for dev websockets/assets)
    proxy_read_timeout  1h;
    proxy_send_timeout  1h;
}

# 2) HMR websocket: /bcap/@vite/@vite → upstream /@vite
location = /bcap/@vite/@vite {
    proxy_http_version 1.1;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        $connection_upgrade;
    proxy_set_header Host              localhost;
    proxy_set_header Origin            http://localhost:82;

    add_header X-BCAP-Proxy "vite-hmr" always;
    add_header Cache-Control "no-store";
    expires -1;

    proxy_pass http://vite_dev/@vite;

    proxy_read_timeout  1h;
    proxy_send_timeout  1h;
}

    # Vite pings show up at a few places depending on client; forward them all.
    location = /__vite_ping         { add_header X-BCAP-Proxy "vite-ping-root" always;  proxy_pass http://vite_dev; }
    location = /bcap/__vite_ping    { add_header X-BCAP-Proxy "vite-ping-bcap" always;  proxy_pass http://vite_dev; }
    location = /bcap/@vite/__vite_ping { add_header X-BCAP-Proxy "vite-ping-scoped" always; proxy_pass http://vite_dev; }

    # ===== 2) Django =====
    # Static first so it wins over the generic /bcap/ block below
    location ^~ /bcap/static/ {
        add_header X-BCAP-Proxy "django-static" always;

        # Pass through unchanged (Django expects the /bcap/static/... prefix)
        proxy_set_header Host              $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_pass http://django_app;
    }

    # Everything else under /bcap/ -> Django
    location ^~ /bcap/ {
        add_header X-BCAP-Proxy "django-app" always;

        proxy_set_header Host              $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_pass http://django_app;
    }

    # Optional: a tiny health/info endpoint
    location = /_nginx_ok {
        add_header Content-Type text/plain;
        return 200 "ok\n";
    }
}